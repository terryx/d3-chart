{"version":3,"sources":["webpack:///example01.bundle.js","webpack:///webpack/bootstrap 7b0e6fd6bb6431313c75?2143","webpack:///./js/example01.js","webpack:///../~/d3/build/d3.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","171","_interopRequireDefault","obj","default","_d","_d2","console","log","76","global","factory","this","ascendingComparator","f","x","ascending","tickStep","start","stop","count","step0","Math","abs","max","step1","pow","floor","LN10","error","e10","e5","e2","length","Map","map$1","map","each","key","set","Array","isArray","createObject","setObject","createMap","setMap","Set","add","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","sqrt","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","a","b","computeUpperHullIndexes","points","indexes","size","cross","slice","Path","_x0","_y0","_x1","_y1","_","path","tree","y","isNaN","parent","xm","ym","xp","yp","right","bottom","j","node","_root","leaf","data","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","Infinity","cover","removeAll","remove","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","undefined","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","e","abort","end","apply","noabort","r","maybeNotify","queue","concurrency","arguments","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","Radial","curve","_curve","curveRadial","radial","radialLine","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","min","slope2","h","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","v","extend","definition","create","Color","color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","g","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","round","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","push","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","indexOf","type","set$2","callback","noop$1","concat","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","interval","clearInterval","setInterval","newInterval","floori","offseti","field","date","Date","ceil","d0","d1","offset","step","range","filter","test","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","match","re","fill","align","symbol","width","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","w","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","toString","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","index","unknown","implicit","domain","slice$3","has","band","rescale","reverse","range$$1","paddingInner","paddingOuter","bandwidth","values","ordinalRange","rangeRound","padding","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","source","target","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","ticks","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","args","sourceEvent","none$2","empty","EnterNode","datum","_parent","bindIndex","enter","update","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","selection","root","init","id","schedule","__transition","state","CREATED","set$3","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","transition","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","top","range0","range1","position","selectAll","order","tickExit","tickEnter","append","attr","line","select","text","left","merge","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","height","Node$2","encloses","dr","encloseN","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","d3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","i0","i1","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","find","nodeById","nodeId","x$2","y$2","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","array","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","svg","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","compare","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","sign$1","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","sum","transpose","zip","prefix","constructor","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","defer","await","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","cross$1","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","T","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","html","createRange","createContextualFragment","json","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","TypeError","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","0","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","point$5","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","siblings","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","preventDefault","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$10","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","circle$1","pointEqual","isSubject","extent$1","length$2","object$1","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$8","reflectX","reflectY","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw"],"mappings":"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","file":"example01.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 171);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 171:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _d = __webpack_require__(76);\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// const d3 = require('d3');\nconsole.log(_d2.default);\n\n/***/ },\n\n/***/ 76:\n/***/ function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.4.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// example01.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 171);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7b0e6fd6bb6431313c75","import d3 from 'd3';\n// const d3 = require('d3');\nconsole.log(d3)\n\n\n\n// WEBPACK FOOTER //\n// ./js/example01.js","// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.4.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/d3/build/d3.js\n// module id = 76\n// module chunks = 1"],"sourceRoot":""}